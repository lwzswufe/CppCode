1, 安装C/C++,C/C++ Clang Command Adapter, C++ intellisense, Code Runner， guides等五个应用
2, 拷贝配置文件
3，安装编译器（x86_64-7.20-MinGW）
4，安装Clang for Windows (64-bit)  安装目录 C:\LLVM\
5, 合并MinGW子文件夹与LLVM子文件夹（两个子文件夹都包含bin）合并后约1.51GB
6, 指定安装目录为 C:\LLVM\bin   
7, 删除MinGW64
8, 配置c_cpp_properties.json 参照
    https://github.com/Microsoft/vscode-cpptools/blob/master/Documentation/LanguageServer/MinGW.md
9, g++使用参照 https://cloud.tencent.com/developer/article/1176744
10，makefile使用参照 https://seisman.github.io/how-to-write-makefile/introduction.html#id9

VScode配置文件路径宏:
    ${workspaceFolder} - the path of the folder opened in VS Code
    ${workspaceFolderBasename} - the name of the folder opened in VS Code without any slashes (/)
    ${file} - the current opened file
    ${relativeFile} - the current opened file relative to workspaceFolder
    ${fileBasename} - the current opened file's basename
    ${fileBasenameNoExtension} - the current opened file's basename with no file extension
    ${fileDirname} - the current opened file's dirname
    ${fileExtname} - the current opened file's extension
    ${cwd} - the task runner's current working directory on startup
    ${lineNumber} - the current selected line number in the active file
    ${selectedText} - the current selected text in the active file
    ${execPath} - the path to the running VS Code executable
来源https://code.visualstudio.com/docs/editor/variables-reference
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
linux 下 设置
    "code-runner.executorMap":
    {
        "cpp": "cd $dir && clang++ $fileName -o $fileNameWithoutExt -std=c++11 && $dir$fileNameWithoutExt",
    },
    "code-runner.runInTerminal": true,
    "code-runner.ignoreSelection": true,
    "code-runner.saveFileBeforeRun": true

    
